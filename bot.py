import asyncio
import re
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime, timedelta

TOKEN = "7654324736:AAHHU91BadBbPxSrkvI9Y9O-T1GmmfJgBnU"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

bot = Bot(token=TOKEN)
dp = Dispatcher()
scheduler = AsyncIOScheduler()

# üìå –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")],
        [KeyboardButton(text="üìã –ú–æ–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")]
    ],
    resize_keyboard=True
)

@dp.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π /remind <–≤—Ä–µ–º—è> <—Ç–µ–∫—Å—Ç>.\n\n–ü—Ä–∏–º–µ—Ä:\n/remind 30m –°–¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É\n/remind 2h –ü–æ–π—Ç–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É", reply_markup=main_keyboard)

@dp.message(Command("remind"))
async def remind_handler(message: types.Message):
    args = message.text.split(maxsplit=2)
    
    if len(args) < 3:
        await message.answer("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: /remind <–≤—Ä–µ–º—è> <—Ç–µ–∫—Å—Ç>\n\n–ü—Ä–∏–º–µ—Ä:\n/remind 30m –°–¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É\n/remind 2h –ü–æ–π—Ç–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É")
        return

    time_str, text = args[1], args[2]

    # –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è (—Ñ–æ—Ä–º–∞—Ç—ã: "30m", "2h")
    match = re.match(r"(\d+)([mh])", time_str)
    if not match:
        await message.answer("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏! –ò—Å–ø–æ–ª—å–∑—É–π:\n- `Xm` (–º–∏–Ω—É—Ç—ã)\n- `Xh` (—á–∞—Å—ã)\n\n–ü—Ä–∏–º–µ—Ä:\n/remind 45m –ü–∞—É–∑–∞\n/remind 3h –í—Å—Ç—Ä–µ—á–∞", parse_mode="Markdown")
        return

    amount, unit = int(match.group(1)), match.group(2)
    delay = amount * 60 if unit == "m" else amount * 3600  # –ú–∏–Ω—É—Ç—ã –∏–ª–∏ —á–∞—Å—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

    remind_time = datetime.now() + timedelta(seconds=delay)

    # –°–æ–∑–¥–∞—ë–º –∑–∞–¥–∞—á—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    scheduler.add_job(send_reminder, "date", run_date=remind_time, args=[message.chat.id, text])

    await message.answer(f"‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ {amount} {'–º–∏–Ω—É—Ç' if unit == 'm' else '—á–∞—Å–æ–≤'}.")

async def send_reminder(chat_id, text):
    await bot.send_message(chat_id, f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {text}")

async def main():
    scheduler.start()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
