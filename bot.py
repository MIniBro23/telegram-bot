import asyncio
import re
import os
import pytz
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime, timedelta

# ‚úÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –ö–∏–µ–≤–∞
KYIV_TZ = pytz.timezone("Europe/Kiev")

# ‚úÖ –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ Render!)
TOKEN = os.getenv("TOKEN")
if not TOKEN:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")

bot = Bot(token=TOKEN)
dp = Dispatcher()
scheduler = AsyncIOScheduler()

# üìå –•—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π (–ø–æ chat_id)
reminders = {}

# üìå –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")],
        [KeyboardButton(text="üìã –ú–æ–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")]
    ],
    resize_keyboard=True
)

# üìå Inline-–∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
reminder_type_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚è≥ –ß–µ—Ä–µ–∑ –≤—Ä–µ–º—è (30m, 2h)", callback_data="remind_relative")],
        [InlineKeyboardButton(text="üìÖ –ü–æ –¥–∞—Ç–µ (15.02 18:30)", callback_data="remind_absolute")]
    ]
)

@dp.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞. –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∞ **–∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è!**\n\n"
                         "üìå –ü—Ä–∏–º–µ—Ä—ã:\n"
                         "`/remind 15.02 18:30 –ü–æ–∑–≤–æ–Ω–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—è–º`\n"
                         "`/remind 20.03 09:00 –í—Å—Ç—Ä–µ—á–∞`\n"
                         "`/remind 10m –°–¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É`", parse_mode="Markdown", reply_markup=main_keyboard)

@dp.message(lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")
async def add_reminder_handler(message: types.Message):
    """–ó–∞–ø—Ä–æ—Å –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏"""
    await message.answer("–í—ã–±–µ—Ä–∏, –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:", reply_markup=reminder_type_keyboard)

@dp.callback_query(lambda c: c.data == "remind_relative")
async def ask_relative_time(callback: types.CallbackQuery):
    """–ó–∞–ø—Ä–æ—Å –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '30m' –∏–ª–∏ '2h'"""
    await bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ `30m –¢–µ–∫—Å—Ç` –∏–ª–∏ `2h –¢–µ–∫—Å—Ç`.\n\n–ü—Ä–∏–º–µ—Ä:\n"
                                                     "`30m –°–¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É`\n"
                                                     "`2h –ü–æ–∑–≤–æ–Ω–∏—Ç—å –¥—Ä—É–≥—É`", parse_mode="Markdown")

@dp.callback_query(lambda c: c.data == "remind_absolute")
async def ask_absolute_time(callback: types.CallbackQuery):
    """–ó–∞–ø—Ä–æ—Å –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '15.02 18:30'"""
    await bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ `–¥–¥.–º–º —á—á:–º–º –¢–µ–∫—Å—Ç`.\n\n–ü—Ä–∏–º–µ—Ä:\n"
                                                     "`15.02 18:30 –í—Å—Ç—Ä–µ—á–∞`\n"
                                                     "`20.03 09:00 –°–æ–≤–µ—â–∞–Ω–∏–µ`", parse_mode="Markdown")

@dp.message(Command("remind"))
async def remind_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    args = message.
