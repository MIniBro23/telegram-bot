import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime, timedelta

TOKEN = "7654324736:AAFQ4s1TxADfqYCZ2FvB0zcdn3wyvDnPrLM"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

bot = Bot(token=TOKEN)
dp = Dispatcher()
scheduler = AsyncIOScheduler()

reminders = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π

# üìå –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")],
        [KeyboardButton(text="üìã –ú–æ–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")]
    ],
    resize_keyboard=True
)

# ‚è≥ –ö–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
time_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="5 –º–∏–Ω—É—Ç", callback_data="remind_5"),
         InlineKeyboardButton(text="10 –º–∏–Ω—É—Ç", callback_data="remind_10"),
         InlineKeyboardButton(text="15 –º–∏–Ω—É—Ç", callback_data="remind_15")]
    ]
)

@dp.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_keyboard)

@dp.message(lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")
async def add_reminder_handler(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –≤—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:", reply_markup=time_keyboard)

@dp.callback_query(lambda call: call.data.startswith("remind_"))
async def inline_reminder_handler(callback: types.CallbackQuery):
    delay = int(callback.data.split("_")[1])
    text = "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!"  # –ú–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏–ª —Ç–µ–∫—Å—Ç
    remind_time = datetime.now() + timedelta(minutes=delay)

    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    scheduler.add_job(send_reminder, "date", run_date=remind_time, args=[callback.message.chat.id, text])

    await callback.message.answer(f"‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ {delay} –º–∏–Ω—É—Ç.")
    await callback.answer()

async def send_reminder(chat_id, text):
    await bot.send_message(chat_id, f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {text}")

async def main():
    scheduler.start()
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
